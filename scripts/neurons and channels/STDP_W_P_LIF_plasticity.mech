% excitatory AMPA synapse expresses STDP
% the STDP change initialy impacts W but extends its influence on P

% AMPA synaptic parameters
gAmpa = 0.1       % mS/cm2, maximal conductance
EAMPA = [0]         % mV, reversal potential
tauAMPAr = [0.4]   
tauAMPAd = [4]

% Network Connectivity
netcon=ones(N_pre, N_post) % default connectivity matrix is all-to-all

% ICs
y(0)=zeros(1,N_post); 

sAMPA(0)=zeros(1,N_pre)
z(0)=0

xSyn1(0)=zeros(1,N_pre); 
wSyn1(0)=ones(N_pre,N_post)

xSyn2(0)=zeros(1,N_pre); 
wSyn2(0)=zeros(N_pre,N_post)
netcon2(0)=zeros(N_pre,N_post)

delaySyn1_pre=0
delaySyn2_pre=5

% STDP params
newSynW = 0.5
taux=5
tauy=5
wmax=2.4
rx=0.5 % LTP step
ry=0.5 % LTD step
alpha=20 % memory amplitude modulation
delay_pre=0
delay_post=0

% Shared functions
heavyside_theta = @(x) double(x>0)
g_ampa(sAMPA) = gAmpa.*(sAMPA.*A)

synapse_formation(w, wmx, connmx) = double(w >= wmx) + double(connmx~=0); 
synapse_elimination(w, connmx) = double(connmx~=0) - double(w <= 0.001);

ax(x)=(1-x).*alpha % incremental increase in presynaptic trace with nearest-neighbor spike-interaction
ay(y)=(1-y).*alpha % incremental increase in postsynaptic trace
Ax(w)=heavyside_theta(wmax-w).*rx % hard bounds
Ay(w)=w*ry      % soft bounds
detection_interval = 1.1*dt

% Postsynaptic trace
dy/dt=-y./tauy+ay(y).*sum((t-tspike_post-delay_post)<detection_interval)

% Presynaptic spike detection
% Fast rise phase (timescale tauAMPAr)
dz/dt = -z / tauAMPAr + sum( (t - tspike_pre > 0) .* exp(-(t - tspike_pre)/tauAMPAr ))

% Slow decay phase (timescale tauAMPAd)
dsAMPA/dt = (z - sAMPA) / tauAMPAd

% Synaptic conductance and currents
A = 5 % need to scale sAMPA

% Independent functions for all synaptic dimensions
% (1) Main layer
    % Presynaptic trace
dxSyn1/dt=-xSyn1./taux+ax(xSyn1).*sum((t-tspike_pre-delaySyn1_pre)<detection_interval)

    % Weight change
dwSyn1/dt=Ax(wSyn1).*repmat(xSyn1,[N_post,1])'.*repmat(sum((t-tspike_post-delay_post)<detection_interval),[N_pre, 1]) - Ay(wSyn1).*repmat(y,[N_pre, 1]).*repmat(sum((t-tspike_pre-delay_pre)<detection_interval),[N_post,1])'

IAMPAsyn1(X,wSyn1,sAMPA) = g_ampa(sAMPA)*(wSyn1.*netcon).*(X-EAMPA)

% (1) Frist added layer
    % Presynaptic trace
dxSyn2/dt=-xSyn2./taux+ax(xSyn2).*sum((t-tspike_pre-delaySyn2_pre)<detection_interval)

    % Weight change
dwSyn2/dt=Ax(wSyn2).*repmat(xSyn2,[N_post,1])'.*repmat(sum((t-tspike_post-delay_post)<detection_interval),[N_pre, 1]) - Ay(wSyn2).*repmat(y,[N_pre, 1]).*repmat(sum((t-tspike_pre-delay_pre)<detection_interval),[N_post,1])'

IAMPAsyn2(X,wSyn2,sAMPA) = g_ampa(sAMPA)*(wSyn2.*double(netcon2~=0)).*(X-EAMPA)

% Conditions
dnetcon2/dt = synapse_formation(wSyn1, wmax, netcon2).*netcon;

if(netcon2>0)(wSyn2=newSynW)

monitor IAMPAsyn1, IAMPAsyn2
@current += -IAMPAsyn1(X_post,wSyn1,sAMPA)-IAMPAsyn2(X_post,wSyn2,sAMPA)